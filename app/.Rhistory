library(R2HTML)
library(caret)
?caret
?varImp
varImp.randomForest
library("randomForest")
library(randomForest)
install.packages("randomForest")
varImp.randomForest
?varImp.randomForest
varImp.randomForest
install.packages("party")
.libPaths()
?roc
?ROC
install.packages("pROC")
library(pROC)
?roc
shiny::runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
install.packages("shinyjs")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
install.packages("shinyFiles")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
library(DT)
install.packages("DT")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
library(data.table)
install.packages("data.table")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
install.packages("ggthemes")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
install.packages("googleVis")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
install.packages("rvest")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
install.packages("XML")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
install.packages("R2HTML")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
install.packages("markdown")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
shiny::runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
library(rsconnect)
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
shiny::runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
terminateApp("inebo")
terminateApp()
terminateApp("inebo")
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
terminateApp("inebo")
terminateApp("inebo")
shiny::runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
proj <- read.csv(file = "data/2017proj.csv")
getwd()
runApp('C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app')
getwd()
setwd("C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/Inebo/app")
getwd()
proj <- read.csv(file = "data/2017proj.csv")
View(proj)
View(proj)
runApp()
team_list[3]
TeamNeeds <- matrix(nrow = 12, ncol = 16)
View(TeamNeeds)
NumTeams = 10
NumTeams = 12
TeamNeeds <- matrix(nrow = NumTeams, ncol = 16)
teamnames <- as.character(team_list)
teamnames[3]
for(i in 1:NumTeams){
TeamNeeds[i,1] <- teamnames[i]
}
View(TeamNeeds)
shiny::runApp()
runApp()
homeruns <- read.csv(file = "C:/Users/Michael Surace/Desktop/Personal Projects/Fantasy Sports/2017 Homerun Derby/Teams.csv")
View(homeruns)
install.packages("PitchRx")
Yes
install.packages("pitchRx")
library(pitchRx)
dat <- scrape(start = "2016-06-01", end = "2016-06-01")
data <- data.frame(dat)
picth <- data.frame(dat["Pitch"])
picth <- data.frame(dat[["Pitch"])
picth <- data.frame(dat[["Pitch"]])
picth <- data.frame(dat[["pitch"]])
View(picth)
head[dat]
names(dat)
atbat <- data.frame(dat[["atbat"]])
View(atbat)
action <- data.frame(dat[["action"]])
View(action)
?xml2
??xml2
shiny::runApp()
runApp()
runApp()
install.packages("Leaflet")
install.packages("leaflet")
install.packages("leaflet")
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12) %>% addTiles()
library(shiny)
library(shinyjs)
library(shinyFiles)
library(rsconnect)
library(reshape2)
require(plyr)
library(dplyr)
library(DT)
library(data.table)
library(ggplot2)
library(ggthemes)
library(scales)
library(googleVis)
library(rvest)
library(xml2)
library(XML)
library(plotly)
library(DT)
library(tidyr)
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12) %>% addTiles()
library(leaflet)
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12) %>% addTiles()
print(m)
m <- leaflet() %>% setView(lng = -77.0363, lat = 38.8951, zoom = 12) %>% addTiles()
print(m)
shiny::runApp()
runApp()
library(rsconnect)
terminateApp("inebo")
shiny::runApp()
runApp()
install.packages("baseballr")
library("baseballr")
install.packages("openWAR")
data <- read.csv(file = "C:/Users/Michael Surace/Desktop/7A_Purchase.csv")
View(data)
library(shiny)
library(shinyjs)
library(shinyFiles)
library(rsconnect)
library(reshape2)
require(plyr)
library(dplyr)
library(DT)
library(data.table)
library(ggplot2)
library(ggthemes)
library(scales)
library(googleVis)
library(rvest)
library(xml2)
library(XML)
library(plotly)
library(DT)
library(tidyr)
library(stringr)
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount))
data$Purchase_Amount <- as.numeric(as.character(gsub(",","",sub("\\$","",data$Purchase_Amount))))
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount))
data$Improper_Payment_Amount <- as.numeric(as.character(gsub(",","",sub("\\$","",data$Improper_Payment_Amount))))
data$Purchase_Amount <- as.numeric(data$Purchase_Amount)
View(data)
data$Improper_Payment_Amount <- as.numeric(data$Improper_Payment_Amount)
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount))
View(data_sum)
data$Improper_Payment_Amount[is.na()] <- 0
data$Improper_Payment_Amount[is.na(data$Improper_Payment_Amount)] <- 0
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount))
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount)) %>%
filter(Svc_Center != "")
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount)) %>%
filter(Svc_Center != "") %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata)
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount),
Total_Pop_Pur_Amt_Strata = mean(Total_Pop_Pur)) %>%
filter(Svc_Center != "") %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata)
data$Total_Pop_Pur <- as.numeric(as.character(gsub(",","",sub("\\$","",data$Total_Pop_Pur))))
data$Total_Pop_Pur <- as.numeric(data$Total_Pop_Pur)
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount),
Total_Pop_Pur_Amt_Strata = mean(Total_Pop_Pur)) %>%
filter(Svc_Center != "") %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata)
data$Pop_Pur_Amt <- as.numeric(as.character(gsub(",","",sub("\\$","",data$Pop_Pur_Amt))))
data$Pop_Pur_Amt <- as.numeric(data$Pop_Pur_Amt)
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount),
Total_Pop_Pur_Amt_Strata = mean(Pop_Pur_Amt)) %>%
filter(Svc_Center != "") %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata)
data_sum <- data %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amount),Total_IP_Amt_Strata = sum(Improper_Payment_Amount),
Total_Pop_Pur_Amt_Strata = mean(Pop_Pur_Amt)) %>%
filter(Svc_Center != "") %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata, Pop_Est_IP_Amt = IP_Rate_Strata*Total_Pop_Pur_Amt_Strata)
write.csv(data_sum, file = "C:/Users/Michael Surace/Desktop/7a_purchase_loss.csv")
data <- read.csv(file = "C:/Users/Michael Surace/Desktop/7A_Purchase_Calculations.csv")
data$IP_Amt[is.na(data$IP_Amt)] <- 0
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amt),Total_IP_Amt_Strata = sum(IP_wgt),
Total_Pop_Pur_Amt_Strata = mean(Pop_Pur_Amt)) %>%
filter(Svc_Center != "") %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata, Pop_Est_IP_Amt = IP_Rate_Strata*Total_Pop_Pur_Amt_Strata)
View(data_sum)
write.csv(data_sum, file = "C:/Users/Michael Surace/Desktop/7a_purchase_loss.csv")
data <- read.csv(file = "C:/Users/Michael Surace/Desktop/7A_Purchase_Calculations.csv")
data$IP_Amt[is.na(data$IP_Amt)] <- 0
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amt),Total_IP_Amt_Strata = sum(IP_wgt),
Total_Pop_Pur_Amt_Strata = mean(Pop_Pur_Amt)) %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata, Pop_Est_IP_Amt = IP_Rate_Strata*Total_Pop_Pur_Amt_Strata)
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amt),Total_IP_Amt_Strata = sum(IP_wgt),
Total_Pop_Pur_Amt_Strata = mean(Pop_N)) %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata, Pop_Est_IP_Amt = IP_Rate_Strata*Total_Pop_Pur_Amt_Strata)
write.csv(data_sum, file = "C:/Users/Michael Surace/Desktop/7a_purchase_loss.csv")
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amt),Total_IP_Amt_Strata = sum(IP_wgt)/n())
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amt),Total_IP_Amt_Strata = sum(IP_wgt)/n()) %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata, Pop_Est_IP_Amt = IP_Rate_Strata*Total_Pop_Pur_Amt_Strata)
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amt),Total_IP_Amt_Strata = sum(IP_wgt)/n()) %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata)
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(IP_Amt_Strata = sum(IP_wgt) /n())%>%
summarize (sumamt = sum (IP_Amt_Strata))
View(data_sum)
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(IP_Amt_Strata = sum(IP_wgt) /n())%>%
ungroup() %>%
summarize (sumamt = sum (IP_Amt_Strata))
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(IP_Amt_Strata = sum(IP_wgt) /n())
View(data_sum)
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(IP_Amt_Strata = sum(IP_wgt) /n())%>%
ungroup() %>%
summarize (sumamt = sum (IP_Amt_Strata))
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amt),Total_IP_Amt_Strata = sum(IP_wgt),
Total_Pop_Pur_Amt_Strata = mean(Pop_Pur_Amt)) %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata, Pop_Est_IP_Amt = IP_Rate_Strata*Total_Pop_Pur_Amt_Strata)
data <- read.csv(file = "C:/Users/Michael Surace/Desktop/7A_Purchase_Calculations.csv")
data$IP_Amt[is.na(data$IP_Amt)] <- 0
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amt),Total_IP_Amt_Strata = sum(IP_wgt),
Total_Pop_Pur_Amt_Strata = mean(Pop_Pur_Amt)) %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata, Pop_Est_IP_Amt = IP_Rate_Strata*Total_Pop_Pur_Amt_Strata)
data_sum <- data %>%
mutate(IP_wgt = IP_Amt*SamplingWeight) %>%
group_by(Svc_Center) %>%
summarize(Total_Purchase_Amt_Strata = sum(Purchase_Amt),Total_IP_Amt_Strata = sum(IP_wgt)/n(),
Total_Pop_Pur_Amt_Strata = mean(Pop_Pur_Amt)) %>%
mutate(IP_Rate_Strata = Total_IP_Amt_Strata/Total_Purchase_Amt_Strata, Pop_Est_IP_Amt = IP_Rate_Strata*Total_Pop_Pur_Amt_Strata)
data <- read.csv(file = "C:/Users/Michael Surace/Desktop/7A_Purchase_Calculations.csv")
data$IP_Amt[is.na(data$IP_Amt)] <- 0
df %>%
mutate(IP_Amt = ifelse(is.na(IP_Amt),0, IP_Amt),IP_wgt = IP_Amt/Prob_Loan_Selection) %>%
group_by(Svc_Center) %>%
dplyr::summarize(IP_Amt_Strata = sum(IP_wgt)/n()) %>%
ungroup() %>%
dplyr::summarize(tot = sum(IP_Amt_Strata))
df %>%
mutate(IP_wgt = IP_Amt/Prob_Loan_Selection) %>%
group_by(Svc_Center) %>%
dplyr::summarize(IP_Amt_Strata = sum(IP_wgt)/n()) %>%
ungroup() %>%
dplyr::summarize(tot = sum(IP_Amt_Strata))
library(dplyr)
df %>%
mutate(IP_wgt = IP_Amt/Prob_Loan_Selection) %>%
group_by(Svc_Center) %>%
dplyr::summarize(IP_Amt_Strata = sum(IP_wgt)/n()) %>%
ungroup() %>%
dplyr::summarize(tot = sum(IP_Amt_Strata))
data_sum <- data %>%
mutate(IP_wgt = IP_Amt/Prob_Loan_Selection) %>%
group_by(Svc_Center) %>%
dplyr::summarize(IP_Amt_Strata = sum(IP_wgt)/n()) %>%
ungroup() %>%
dplyr::summarize(tot = sum(IP_Amt_Strata))
shiny::runApp()
reg_data <- read.csv(file = "data/Reg_Data.csv" )
playoff_data <- read.csv(file = "data/Playoff_Data.csv")
proj <- read.csv(file = "data/2017proj.csv")
draft <- read.csv(file = "data/Draft_Data.csv")
View(reg_data)
Reg_Data_01 <- reg_data %>%
select(-Score,-Opponent,-Opponent.Name,-X) %>%
plyr::rename(c('Real.Opponent.Name' = 'Opponent_Name'))
library(shiny)
library(shinyjs)
library(shinyFiles)
library(rsconnect)
library(reshape2)
require(plyr)
library(dplyr)
library(DT)
library(data.table)
library(ggplot2)
library(ggthemes)
library(scales)
library(googleVis)
library(rvest)
library(xml2)
library(XML)
library(plotly)
library(DT)
library(tidyr)
library(stringr)
library(nflscrapR)
Reg_Data_01 <- reg_data %>%
select(-Score,-Opponent,-Opponent.Name,-X) %>%
plyr::rename(c('Real.Opponent.Name' = 'Opponent_Name'))
View(Reg_Data_01)
Reg_Data_01$Team <- as.character(Reg_Data_01$Team)
Reg_Data_01$Opponent_Name <- as.factor(Reg_Data_01$Opponent_Name)
Reg_Data_01$Win_Pct <- ifelse(Reg_Data_01$Outcome == 'Win',1,0)
gamelog <- Reg_Data_01 %>%
group_by(Season, Week)
View(playoff_data)
View(gamelog)
runApp()
View(Reg_Data_01)
runApp()
runApp()
runApp()
runApp()
runApp()
Historical_Pts_For <- aggregate(Points.For ~ Team, data = Reg_Data_01, mean, na.rm = TRUE)
View(Historical_Pts_Against)
View(Historical_Pts_Against)
View(Historical_Pts_For)
Test <- Reg_Data_01 %>%
group_by(Team) %>%
summarize(Pts = mean(Points.For))
View(Test)
Test <- Reg_Data_01 %>%
group_by(Team) %>%
summarize(Overall_Pts_For = mean(Points.For), Overall_Pts_Against = mean(Points.Against))
View(Historical_Pts_WinPct)
View(Historical_Pts_For)
View(Historical_Pts_Against)
Test <- Reg_Data_01 %>%
group_by(Team) %>%
summarize(Overall_Pts_For = mean(Points.For),
Overall_Pts_Against = mean(Points.Against),
Win_Pct = mean(Win_Pct))
View(Test)
View(Historical_Pts_WinPct)
Season_Stats <- Reg_Data_01 %>%
group_by(Team,Season) %>%
summarize(Pts_For = mean(Points.For),
Pts_Against = mean(Points.Against),
Win_Pct = mean(Win_Pct))
View(Season_Stats)
Best_Season <- Season_Stats %>%
group_by(Team) %>%
summarize(Best_Season = max(Points.For),
Best_WinPct = max(Win_Pct))
Best_Season <- Season_Stats %>%
group_by(Team) %>%
summarize(Best_Season = max(Pts_For),
Best_WinPct = max(Win_Pct))
View(Best_Season)
Worst_Season <- Season_Stats %>%
group_by(Team) %>%
summarize(Worse_Season = min(Pts_For),
Worse_WinPct = min(Win_Pct))
View(Worst_Season)
Season_Stats <- Reg_Data_01 %>%
group_by(Team,Season) %>%
summarize(Pts_For = mean(Points.For),
Pts_Against = mean(Points.Against),
Win_Pct = mean(Win_Pct))
BestWorst_Seasons <- Season_Stats %>%
group_by(Team) %>%
summarize(Best_Season = max(Pts_For),
Best_WinPct = max(Win_Pct),
Worse_Season = min(Pts_For),
Worse_Season = min(Win_Pct))
View(BestWorst_Seasons)
BestWorst_Seasons <- Season_Stats %>%
group_by(Team) %>%
summarize(Best_Season = max(Pts_For),
Best_WinPct = max(Win_Pct),
Worse_Season = min(Pts_For),
Worse_WinPct = min(Win_Pct))
View(BestWorst_Seasons)
Game_Stats <- Reg_Data_01 %>%
group_by(Team) %>%
summarize(Best_Week = max(Points.For),
Worse_Week - max(Points.Against))
Game_Stats <- Reg_Data_01 %>%
group_by(Team) %>%
summarize(Best_Week = max(Points.For),
Worse_Week = min(Points.For))
View(Game_Stats)
reg_statistics <- join_all(list(Overall_Stats,BestWorst_Seasons,Game_Stats), by = 'Team', type = 'left')
Overall_Stats <- Reg_Data_01 %>%
group_by(Team) %>%
summarize(Overall_Pts_For = mean(Points.For),
Overall_Pts_Against = mean(Points.Against),
Win_Pct = mean(Win_Pct))
reg_statistics <- join_all(list(Overall_Stats,BestWorst_Seasons,Game_Stats), by = 'Team', type = 'left')
View(reg_statistics)
#Merge Statistics, Calc Wins and Losses, Format
reg_statistics <- join_all(list(Overall_Stats,BestWorst_Seasons,Game_Stats), by = 'Team', type = 'left') %>%
mutate(Wins = 65*Win_Pct, Losses = 65*(1-Win_Pct))
reg_statistics <- reg_statistics[,c(1,11,12,4,2,3,5:10)]
playoff_data$Playoff_Wins <- ifelse(playoff_data$Outcome != 'Win',0,ifelse(playoff_data$Opponent == "Bye",0,1))
playoff_data$Playoff_Losses <- ifelse(playoff_data$Outcome == "Loss",1,0)
playoff_data$Byes <- ifelse(playoff_data$Opponent == "Bye",1,0)
playoff_data$Championships <- ifelse(playoff_data$Round != "Final",0,ifelse(playoff_data$Outcome == "Win",1,0))
playoff_data$Playoff_Apperances <- ifelse(playoff_data$Round == "Quarter Final",1,0)
View(playoff_data)
View(playoff_data_01)
View(Playoff_Data_03)
test <- playoff_data %>%
group_by(Team) %>%
summarize(Playoff_Apperances = sum(Playoff_Apperances),
Playoff_Wins = sum(Playoff_Wins),
Playoff_Losses = sum(Playoff_Losses),
Byes = Sum(Byes),
Championships = sum(Championships),
Playoffs_Pts_For = mean(Points.For),
Playoff_Pts_Against = mean(Points.Against))
test <- playoff_data %>%
group_by(Team) %>%
summarize(Playoff_Apperances = sum(Playoff_Apperances),
Playoff_Wins = sum(Playoff_Wins),
Playoff_Losses = sum(Playoff_Losses),
Byes = sum(Byes),
Championships = sum(Championships),
Playoffs_Pts_For = mean(Points.For),
Playoff_Pts_Against = mean(Points.Against))
View(test)
View(playoffs_final)
full_data <- join_all(list(reg_statistics,Playoff_Data_03), by = 'Team', type = 'full')
View(full_data)
full_data[is.na(full_data)] <- 0
rankings <- mutate(full_data, pts_for.rank = ave(Overall_Pts_For,FUN = function(x) rank(x, ties.method = "first")),
winpct.rank = ave(Win_Pct,FUN = function(x) rank(x, ties.method = "first")),
season.rank = ave(Best_Season,FUN = function(x) rank(x, ties.method = "first")),
Inebo_Pts = pts_for.rank + winpct.rank + season.rank + Playoff_Apperances + Playoff_Wins + Byes + (12*Championships)
)
reg_final <- arrange(rankings[c(1,23,2,3,17,5:7,9:12)], desc(Inebo_Pts))
View(reg_final)
playoffs_final <- arrange(rankings[c(1,13:19)],desc(Playoff_Apperances))
rankings_final <- rankings[c(1,23,2,3,5,7,13,14,16,17)] %>%
unite(Record, Wins:Losses, sep = "-") %>%
arrange(desc(Inebo_Pts)) %>%
mutate(PlayoffWinsByes = Playoff_Wins + Byes) %>%
select(-Playoff_Wins,-Byes)
View(rankings_final)
View(rankings)
team_list <- reg_data$Team %>% unique
year_list <- c(2012,2013,2014,2015,2016)
save(full_data, playoffs_final, rankings_final, Reg_Data_01, reg_statistics,reg_final,
team_list, year_list, file = 'data/all.RData')
